# Priority values above max_priority will be refused.
max_priority = 9002

[github]

# Information for securely interacting with GitHub. These are found/generated
# under <https://github.com/settings/applications>.

# A GitHub personal access token
access_token = "{{ secrets['gh-access-token'] }}"

# A GitHub oauth application for this instance of homu:
app_client_id = "{{ secrets['app-client-id'] }}"
app_client_secret = "{{ secrets['app-client-secret'] }}"

[web]
host = "0.0.0.0"
port = 54856
secret = "{{ secrets['web-secret'] }}"

# When adding a new chooser, also add it to the "branch" field of the "servo-try" entry in
# https://github.com/mozilla/treeherder/blob/master/treeherder/model/fixtures/repository.json
{% set servo_try_choosers = [
    "linux",
    "mac",
    "windows",
    "windows-rdp",
    "wpt",
    "wpt-2020",
    "wpt-mac",
    "wpt-android",
    "android",
    "magicleap",
    "arm",
] %}
{% set repos = {
    "servo": {
        "travis": False,
        "taskcluster": False,
        "github": True,
        "try_choosers": servo_try_choosers,
    },
} %}

{% set reviewers = [
] %}

{% set operators = [
    "moz-servo-sync",
    "servo-wpt-sync",
] %}

{% set try = [
    "atbrakhi",
    "CYBAI",
    "delan",
    "gterzian",
    "Loirooriol",
    "mrego",
    "mrobinson",
    "stshine",
] %}

# Standard per-repo configs (generated)

{% for name, repo in repos.items() %}

[repo."{{ name }}"]
owner = "{{ repo.get("owner", "servo") }}"
name = "{{ name }}"
reviewers = {{ reviewers + operators + repo.get("extra_reviewers", []) }}
try_users = {{ try }}
try_choosers = {{ repo.get("try_choosers", []) }}

[repo."{{ name }}".github]
secret = "{{ secrets['gh-webhook-secret'] }}"

{% if repo.get('github', False) %}
[repo."{{ name }}".checks.github]
name = "homu build finished"
{% endif %}

{% if repo.get('travis', True) %}
[repo."{{ name }}".checks.travis]
name = "Travis CI - Branch"
{% endif %}

{% if repo.get('travis-legacy', False) %}
[repo."{{ name }}".status.travis]
context = 'continuous-integration/travis-ci/push'
{% endif %}

{% if repo.get('appveyor', False) %}
[repo."{{ name }}".status.appveyor]
context = 'continuous-integration/appveyor/branch'
{% endif %}

{% if repo.get('taskcluster', False) %}
[repo."{{ name }}".status.taskcluster]
context = 'Community-TC (push)'
{% endif %}

{% endfor %}

[db]
file = "{{ db }}"
